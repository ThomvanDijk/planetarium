/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: chrisonciuconcepts (https://sketchfab.com/chrisonciuconcepts)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/models/587941c9c11742c6b82dfb99e7b210b9
title: low poly space ship
Extended by: https://github.com/ThomvanDijk
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { useInteraction } from '@react-three/xr'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('assets/spaceship/scene.gltf')

  const rotation_offset = 1 // This offset tilts the spaceship slightly
  const rotation_speed = 0.1
  let new_rotation = 2 * Math.PI - rotation_offset

  // Subscribe to the render-loop, runs every frame
  useFrame(({ clock }) => {
    // Move spaceship horizontally around the given position on the x and z plane
    const angle = clock.getElapsedTime() * props.speed
    group.current.position.x = props.position[0] + Math.sin(angle) * props.orbit_radius
    group.current.position.z = props.position[2] + Math.cos(angle) * props.orbit_radius

    // Rotate spaceship towards the origin of the rotation
    const rotation_y = Math.atan2(props.position[0] - group.current.position.x, 
      props.position[2] - group.current.position.z)
    group.current.rotation.y = rotation_y - Math.PI / 2

    // Rotate spaceship if clicked
    if (group.current.rotation.z <= new_rotation) {
      group.current.rotation.z += rotation_speed
    }
  });

  useInteraction(group, 'onSelect', () => {
    new_rotation = group.current.rotation.z + 2 * Math.PI
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          geometry={nodes.ship_1.geometry} 
          material={materials.Material} 
        />
      </group>
    </group>
  )
}

useGLTF.preload('assets/spaceship/scene.gltf')
